max(both)# To set y limit
length(datatoplot[datatoplot$set=="conformation",2])
toplot
length(datatoplot[datatoplot$set=="conf_effect",2])
datatoplot[datatoplot$set=="conf_effect",2]
length(datatoplot[datatoplot$set=="ran_conformation_effect",2])
##Barplot for conformation + effect##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,25), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=25, by=5),labels=c("0%","5%","10%","15%","20%","25%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(16,20,c("Conformation (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
legend(-0.5,25,c("Conformation (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
##Barplot for conformation + effect##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,25), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=25, by=5),labels=c("0%","5%","10%","15%","20%","25%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,25,c("Conformation (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
##Barplot for conformation + effect##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,25), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=25, by=5),labels=c("0%","5%","10%","15%","20%","25%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,25,c("Conformation + effect (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
legend(-0.5,26,c("Conformation + effect (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
##Barplot for conformation + effect##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,25), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=25, by=5),labels=c("0%","5%","10%","15%","20%","25%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,25,c("Conformation + effect (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
##Barplot for pathways##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
##Barplot for conformation + effect##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,25), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=25, by=5),labels=c("0%","5%","10%","15%","20%","25%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,25,c("Conformation + effect (n=105)","Random (n=9789)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
mean(datatoplot[datatoplot$set=="conf_effect",2])
mean(datatoplot[datatoplot$set=="ran_conformation_effect",2])
length(datatoplot[datatoplot$set=="conf_effect",2])
length(datatoplot[datatoplot$set=="ran_conformation_effect",2])
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(7,19)]
toplot
both <- data.frame(x0.0=numeric(),x0.1=numeric(),x0.2=numeric(),x0.3=numeric(),x0.4=numeric(),x0.5=numeric(),x0.6=numeric(),x0.7=numeric(),x0.8=numeric(),x0.9=numeric(),x1.0=numeric())
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
both <- rbind(both,percs)
}
colnames(both) <- c("v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10")
rownames(both) <- toplot
values <- round(datatoplot[datatoplot$set=="pathways",2],digits=1)
counts <- table(values)
counts
##Barplot for pathways##
toplot <- levels(datatoplot$set)[c(7,19)]
both <- data.frame(x0.0=numeric(),x0.1=numeric(),x0.2=numeric(),x0.3=numeric(),x0.4=numeric(),x0.5=numeric(),x0.6=numeric(),x0.7=numeric(),x0.8=numeric(),x0.9=numeric(),x1.0=numeric())
values <- round(datatoplot[datatoplot$set=="simple",2],digits=1)
counts <- table(values)
counts <- append(counts,0.0,after=1)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
both <- rbind(both,percs)
toplot
##Barplot for pathways##
toplot <- levels(datatoplot$set)[c(7,19)]
both <- data.frame(x0.0=numeric(),x0.1=numeric(),x0.2=numeric(),x0.3=numeric(),x0.4=numeric(),x0.5=numeric(),x0.6=numeric(),x0.7=numeric(),x0.8=numeric(),x0.9=numeric(),x1.0=numeric())
values <- round(datatoplot[datatoplot$set=="pathways",2],digits=1)
counts <- table(values)
counts <- append(counts,0.0,after=1)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
both <- rbind(both,percs)
values <- round(datatoplot[datatoplot$set=="ran_pathways",2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
both <- rbind(both,percs)
colnames(both) <- c("v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","v10")
rownames(both) <- toplot
both <- as.matrix(both)
max(both)# To set y limit
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,65), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=65, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%","35%","40%","45%","50%","55%","60%","65%"))
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,65), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=0.8, at=seq(from=0.0, to=65, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%","35%","40%","45%","50%","55%","60%","65%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,65), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=65, by=5),labels=c("0%","5%","","15%","","25%","","35%","","45%","","55%","","65%"))
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,65), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=65, by=5),labels=c("","5%","","15%","","25%","","35%","","45%","","55%","","65%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
length(datatoplot[datatoplot$set=="pathways",2])
toplot
length(datatoplot[datatoplot$set=="ran_pathways",2])
legend(-0.5,41,c("Pathways (n=351)","Random (n=33137)"), pch=c(15,15), col=c("darkmagenta","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,65), col=c("darkmagenta","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=65, by=5),labels=c("","5%","","15%","","25%","","35%","","45%","","55%","","65%"))
title(xlab="Connectivity", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,65,c("Pathways (n=351)","Random (n=33137)"), pch=c(15,15), col=c("darkmagenta","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
mean(datatoplot[datatoplot$set=="pathways",2])
mean(datatoplot[datatoplot$set=="ran_pathways",2])
mean(datatoplot[datatoplot$set=="real_complex",2])
#Place on dir path
setwd("/Users/Daniela/Documents/CCG/GU_art_2/GO_levels_extended/results/gos")
#Save summary file names
filenames <- dir()
all_datasets <- character()
# Create object to save all values for boxplot
allpoints <- data.frame(set=character(),Perc=numeric())
for(file in filenames){
# Obtain complete file path to open file.
filepath <- paste("/Users/Daniela/Documents/CCG/GU_art_2/GO_levels_extended/results/gos/",file,sep="")
print(filepath)
dataset <- unlist(strsplit(file,"_golevels",fixed=TRUE))[1]
all_datasets <- append(all_datasets,dataset)
summ <- read.delim(file=filepath, header=TRUE, row.names=NULL, comment.char="#")
levels <- summ[,c(1,6)] # Filters for the columns that are informative
levels <- unique(levels) # Filters instances of several GOs with same level and percentage
print(dim(levels))
temp <- data.frame(set=dataset,Perc=levels[,2])
allpoints <- rbind(allpoints,temp)
}
## Add random values
#Place on dir path
setwd("/Users/Daniela/Documents/CCG/GU_art_2/GO_levels_extended/results/random_gos/percs")
#Save summary file names
filenames <- dir();
all_randoms <- character()
randompoints <- data.frame(set=character(),Perc=numeric())
for (file in filenames){
# Obtain complete file path to open file.
filepath <- paste("/Users/Daniela/Documents/CCG/GU_art_2/GO_levels_extended/results/random_gos/percs/",file,sep="")
print(filepath)
dataset <- paste("ran",unlist(strsplit(file,"_random",fixed=TRUE))[1],sep="_")
all_randoms <- append(all_randoms,dataset)
#Read file - delete # char from header in file before reading
summ <- read.delim(file=filepath, header=TRUE, row.names=1, comment.char="#")
# Turn all random points to a single vector
dims <- dim(summ)
totalvs <- dims[1] * dims[2]
random <- as.matrix(summ)
dim(random) <- c(totalvs,1)
random <- random[,1]
random <- random[!is.na(random)]
length(random)
# Create new object to save values for boxplot
tmp <- data.frame(set=dataset,Perc=random)
# Merge to all points
randompoints <- rbind(randompoints,tmp)
dim(allpoints)
}
## SELECT SETS TO PLOT
# Look at available real levels
levels(allpoints$set)
# Look at available random levels
levels(randompoints$set)
## Save in vector REAL levels to plot to create new data frame with those levels -
toplot <- levels(allpoints$set)[c(5,10,9,8,4,3,6)]
#toplot <- levels(allpoints$set) # If all levels will be plotted
datatoplot <- data.frame(set=character(),Perc=numeric()) # Declare data frame that will go to plot
for (pl in toplot){
tmp <- allpoints[allpoints$set==pl,]
# Merge to all points
datatoplot <- rbind(datatoplot,tmp)
}
## Save in vector RANDOM levels to plot to create new data frame with those levels -
toplot <- levels(randompoints$set)[c(6,11,10,9,4,5,7)]
#toplot <- levels(randompoints$set)
for (pl in toplot){
tmp <- randompoints[randompoints$set==pl,]
# Merge to all points
datatoplot <- rbind(datatoplot,tmp)
}
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(10,22)]
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of strict regulons ##
barplot(both, ylim=c(-0.5,30), col=c("tan3","gainsboro"), beside=TRUE, axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=2, to=32, by=3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
bith
both
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1.3, at=seq(from=0.0, to=35, by=5))
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes in GO", ylab="GENSOR Units", cex.lab=1.3, cex.main=1.5)
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes in GO", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,65,c("Pathways (n=351)","Random (n=33137)"), pch=c(15,15), col=c("darkmagenta","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
legend(-0.5,30,c("Pathways (n=351)","Random (n=33137)"), pch=c(15,15), col=c("darkmagenta","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes in GO", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Pathways (n=351)","Random (n=33137)"), pch=c(15,15), col=c("tan3","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes in GO", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Strict (n=351)","Random (n=33137)"), pch=c(15,15), col=c("tan3","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
mean(datatoplot[datatoplot$set=="strict",2])
mean(datatoplot[datatoplot$set=="ran_strict",2])
length(datatoplot[datatoplot$set=="strict",2])
length(datatoplot[datatoplot$set=="ran_strict",2])
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes in GO", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Strict (n=231)","Random (n=22679)"), pch=c(15,15), col=c("tan3","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("tan3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Strict (n=231)","Random (n=22679)"), pch=c(15,15), col=c("tan3","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
mean(datatoplot[datatoplot$set=="strict",2])
mean(datatoplot[datatoplot$set=="ran_strict",2])
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(9,21)]
toplot
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of simple regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("palevioletred3","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
toplot
mean(datatoplot[datatoplot$set=="simple",2])
mean(datatoplot[datatoplot$set=="ran_simple",2])
length(datatoplot[datatoplot$set=="simple",2])
length(datatoplot[datatoplot$set=="ran_simple",2])
legend(-0.5,30,c("Simple (n=69)","Random (n=6890)"), pch=c(15,15), col=c("palevioletred3","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(8,20)]
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of strict regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,70), col=c("sienna1","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(8,2)]
toplot
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(8,20)]
toplot
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of complex regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,60), col=c("sienna1","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
## Barplot of complex regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,60), col=c("sienna1","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=60, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
toplot
mean(datatoplot[datatoplot$set=="real_complex",2])
(datatoplot[datatoplot$set=="real_complex",2])
mean(datatoplot[datatoplot$set=="realcomplex",2])
mean(datatoplot[datatoplot$set=="ran_realcomplex",2])
length(datatoplot[datatoplot$set=="realcomplex",2])
length(datatoplot[datatoplot$set=="ran_realcomplex",2])
legend(-0.5,30,c("Strict (n=188)","Random (n=18267)"), pch=c(15,15), col=c("sienna1","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
legend(-0.5,60,c("Strict (n=188)","Random (n=18267)"), pch=c(15,15), col=c("sienna1","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of complex regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,60), col=c("sienna1","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=60, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,60,c("Strict (n=188)","Random (n=18267)"), pch=c(15,15), col=c("sienna1","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of complex regulons ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,60), col=c("sienna1","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=60, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,60,c("Complex (n=188)","Random (n=18267)"), pch=c(15,15), col=c("sienna1","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(4,15)]
toplot
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of conformation ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("darkgoldenrod2","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,60,c("Complex (n=188)","Random (n=18267)"), pch=c(15,15), col=c("darkgoldenrod2","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of conformation ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("darkgoldenrod2","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Complex (n=188)","Random (n=18267)"), pch=c(15,15), col=c("darkgoldenrod2","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
length(datatoplot[datatoplot$set=="conformation",2])
length(datatoplot[datatoplot$set=="ran_conformation_perc",2])
## Barplot of conformation ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("darkgoldenrod2","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Conformation (n=78)","Random (n=7901)"), pch=c(15,15), col=c("darkgoldenrod2","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(3,16)]
toplot
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of conformation + effect ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Conformation (n=78)","Random (n=7901)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
toplot
mean(datatoplot[datatoplot$set=="conf_effect",2])
mean(datatoplot[datatoplot$set=="ran_conformationeffect",2])
levels(datatoplot$set)
mean(datatoplot[datatoplot$set=="conformation",2])
mean(datatoplot[datatoplot$set=="ran_conformation_perc",2])
length(datatoplot[datatoplot$set=="conf_effect",2])
length(datatoplot[datatoplot$set=="ran_conformationeffect",2])
legend(-0.5,30,c("Conformation + effect (n=111)","Random (n=10764)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of conformation + effect ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,30), col=c("greenyellow","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=30, by=5),labels=c("0%","5%","10%","15%","20%","25%","30%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,30,c("Conformation + effect (n=111)","Random (n=10764)"), pch=c(15,15), col=c("greenyellow","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of GOs ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,60), col=c("paleturquoise4","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
levels(datatoplot$set)
#### BARPLOTS ####
toplot <- levels(datatoplot$set)[c(6,18)]
toplot
both <- matrix(ncol=11,nrow=0)
for(pl in toplot){
values <- round(datatoplot[datatoplot$set==pl,2],digits=1)
counts <- table(values)
percs <- (counts/sum(counts))*100
sum(percs)                          # Checks if sum of percentages is 100
sum(percs)  # Checks if sum of percentages is 100
tpercs <- t(as.matrix(percs))
#Add missing values to percs (for precise binding of rows in distributions that lack certain values)
for(id in seq(from=0,to=1,by=.1)){
cid <- as.character(id)
if(!(id %in% colnames(tpercs))){
percs <- append(percs,0.0,after=(id*10))
}
percs <- t(as.matrix(percs))
rownames(percs) <- pl
both <- rbind(both,percs)
}
max(both)                               # To set y limit
## Barplot of GOs ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,100), col=c("paleturquoise4","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=100, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%","","70%","","80%","","90%","","100%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
toplot
length(datatoplot[datatoplot$set=="GOs",2])
length(datatoplot[datatoplot$set=="ran_gos",2])
mean(datatoplot[datatoplot$set=="ran_gos",2])
mean(datatoplot[datatoplot$set=="GOs",2])
legend(-0.5,60,c("GO terms (n=2041)","Random (n=204100)"), pch=c(15,15), col=c("paleturquoise4","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
## Barplot of GOs ##
barplot(both, beside=TRUE,space=c(0,0.3),ylim=c(-0.5,100), col=c("paleturquoise4","gainsboro"), axes=FALSE, border=FALSE, ann=FALSE, axisnames=FALSE)
axis(1, las=2, cex.axis=1.2, at=seq(from=1.3, to=25.3, by=2.3),labels=c("0.0","0.1","0.2","0.3","0.4","0.5","0.6","0.7","0.8","0.9","1.0"))
axis(2, las=2, cex.axis=1, at=seq(from=0.0, to=100, by=5),labels=c("0%","","10%","","20%","","30%","","40%","","50%","","60%","","70%","","80%","","90%","","100%"))
title(xlab="Fraction of genes", ylab="GENSOR Units", cex.lab=1)
legend(-0.5,100,c("GO terms (n=2041)","Random (n=204100)"), pch=c(15,15), col=c("paleturquoise4","gainsboro"),cex=0.75, pt.cex=c(2,2), y.intersp=1.2, x.intersp=1, bty="n")
